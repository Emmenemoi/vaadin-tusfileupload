{"version":3,"file":"456.bundle.uppy.min.js","mappings":"eACIA,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,ECzBxBN,EAAoBQ,EAAI,CAAC,EAGzBR,EAAoBS,EAAKC,GACjBC,QAAQC,IAAIC,OAAOC,KAAKd,EAAoBQ,GAAGO,QAAO,CAACC,EAAUC,KACvEjB,EAAoBQ,EAAES,GAAKP,EAASM,GAC7BA,IACL,KCNJhB,EAAoBkB,EAAKR,GAEZA,EAAU,sBCHvBV,EAAoBmB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOb,GACR,GAAsB,iBAAXc,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBvB,EAAoBwB,EAAI,CAACC,EAAKC,IAAUb,OAAOc,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF1B,EAAoB8B,EAAK1B,IACH,oBAAX2B,QAA0BA,OAAOC,aAC1CnB,OAAOoB,eAAe7B,EAAS2B,OAAOC,YAAa,CAAEE,MAAO,WAE7DrB,OAAOoB,eAAe7B,EAAS,aAAc,CAAE8B,OAAO,GAAO,E,MCL9D,IAAIC,EACAnC,EAAoBmB,EAAEiB,gBAAeD,EAAYnC,EAAoBmB,EAAEkB,SAAW,IACtF,IAAIC,EAAWtC,EAAoBmB,EAAEmB,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOT,IAAc,aAAaU,KAAKV,KAAaA,EAAYM,EAAQG,KAAKJ,GAE3F,CAID,IAAKL,EAAW,MAAM,IAAIW,MAAM,yDAChCX,EAAYA,EAAUY,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF/C,EAAoBgD,EAAIb,C,WCdxB,IAAIc,EAAkB,CACrB,IAAK,GAgBNjD,EAAoBQ,EAAEoC,EAAI,CAAClC,EAASM,KAE/BiC,EAAgBvC,IAElB0B,cAAcpC,EAAoBgD,EAAIhD,EAAoBkB,EAAER,GAE9D,EAGD,IAAIwC,EAAqBC,KAA6B,uBAAIA,KAA6B,wBAAK,GACxFC,EAA6BF,EAAmBG,KAAKC,KAAKJ,GAC9DA,EAAmBG,KAvBCE,IACnB,IAAKC,EAAUC,EAAaC,GAAWH,EACvC,IAAI,IAAItD,KAAYwD,EAChBzD,EAAoBwB,EAAEiC,EAAaxD,KACrCD,EAAoBO,EAAEN,GAAYwD,EAAYxD,IAIhD,IADGyD,GAASA,EAAQ1D,GACdwD,EAASb,QACdM,EAAgBO,EAASG,OAAS,EACnCP,EAA2BG,EAAK,C,KCnBjC,6B","sources":["webpack://uppy-addon/webpack/bootstrap","webpack://uppy-addon/webpack/runtime/ensure chunk","webpack://uppy-addon/webpack/runtime/get javascript chunk filename","webpack://uppy-addon/webpack/runtime/global","webpack://uppy-addon/webpack/runtime/hasOwnProperty shorthand","webpack://uppy-addon/webpack/runtime/make namespace object","webpack://uppy-addon/webpack/runtime/publicPath","webpack://uppy-addon/webpack/runtime/importScripts chunk loading","webpack://uppy-addon/./src/frontend/serviceWorker.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.uppy.min.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t456: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkuppy_addon\"] = self[\"webpackChunkuppy_addon\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","import('@uppy/golden-retriever/lib/ServiceWorker');"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","f","e","chunkId","Promise","all","Object","keys","reduce","promises","key","u","g","globalThis","this","Function","window","o","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","defineProperty","value","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","installedChunks","chunkLoadingGlobal","self","parentChunkLoadingFunction","push","bind","data","chunkIds","moreModules","runtime","pop"],"sourceRoot":""}